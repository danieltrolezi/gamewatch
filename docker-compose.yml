services:
  app:
    container_name: app
    build:
      context: .
      args:
        APP_ENV: ${APP_ENV}
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '80:80'
    volumes:
      - .:/var/www/gamewatch
      - ./vendor:/var/www/gamewatch/vendor
    working_dir: /var/www/gamewatch
    depends_on:
      firestore:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/up"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - bridge
  
  firestore:
    container_name: firestore
    build:
      context: .
      dockerfile: Dockerfile.firestore
      args:
        FIRESTORE_PROJECT_ID: ${FIRESTORE_PROJECT_ID}
    ports:
      - '8080:8080'
      - '4000:4000'
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/firebase/credentials.json
    volumes:
      - './docker/firebase:/firebase'
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - bridge

  redis:
    container_name: ${REDIS_HOST}
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    networks:
      - bridge

networks:
  bridge: